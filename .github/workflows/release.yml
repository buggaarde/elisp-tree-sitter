name: Release

on:
  push:
    tags:
      - '*.*.*'
      - '!melpa-stable*'

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: macos-10.15
            emacs-version: '27.2'
            ext: dylib
          - os: ubuntu-18.04
            emacs-version: '27.2'
            ext: so
          - os: windows-2019
            emacs-version: '27.2'
            ext: dll
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Rust
        run: |
          rustup install stable
          rustc -Vv
          cargo -V

      - uses: purcell/setup-emacs@v3.0
        if: runner.os != 'Windows'
        with:
          version: ${{ matrix.emacs-version }}
      - uses: jcs090218/setup-emacs-windows@v4
        if: runner.os == 'Windows'
        with:
          version: ${{ matrix.emacs-version }}

      - uses: actions/checkout@v2
        with:
          submodules: true

      - run: .github/script/setup-llvm
      - run: .github/script/setup-cask

      - run: bin/setup
      - run: bin/build

      - run: bin/inspect-binaries
        continue-on-error: true

      - name: Install tree-sitter CLI
        run: npm install -g tree-sitter-cli@0.19.3
      - run: bin/test

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: tsc-dyn
          path: core/tsc-dyn.${{ matrix.ext }}
          if-no-files-found: error

  publish-binaries:
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - uses: purcell/setup-emacs@v3.0
        with:
          version: '27.2'
      - uses: actions/checkout@v2
      - name: Generate release notes
        run: |
          bin/dev release-notes $(git describe --tags --abbrev=0) > RELEASE-NOTES
          cat RELEASE-NOTES

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: tsc-dyn
      - run: ls -R

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          body_path: RELEASE-NOTES
          files: |
            tsc-dyn.*

  integ:
    needs: publish-binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-10.15
            emacs-version: '27.2'
          - os: ubuntu-18.04
            emacs-version: '27.2'
          # XXX: Fails on CI, but not locally (Windows 10) with
          # :value 2 :fail-reason "did not signal an error"
          # and
          # (different-types 443 (tsc . 1))
          #
          # - os: windows-2019
          #   emacs-version: '27.2'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: purcell/setup-emacs@v3.0
        if: runner.os != 'Windows'
        with:
          version: ${{ matrix.emacs-version }}
      - uses: jcs090218/setup-emacs-windows@v4
        if: runner.os == 'Windows'
        with:
          version: ${{ matrix.emacs-version }}

      - uses: actions/checkout@v2

      - run: .github/script/setup-cask
      - run: bin/setup

      - run: bin/test integ

  publish-melpa:
    needs: integ
    runs-on: ubuntu-18.04
    steps:
      - name: Set release version
        run: |
          echo "RELEASE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Greenlight releasing to MELPA
        run: |
          git push origin ${{ env.RELEASE_VERSION }}:refs/heads/release
        continue-on-error: true

      # We don't want this to trigger workflows, so we don't use a personal access token.
      - name: Greenlight releasing to MELPA Stable
        uses: actions/github-script@v4
        with:
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/melpa-stable/v${{ env.RELEASE_VERSION }}",
              sha: context.sha
            })
        continue-on-error: true
